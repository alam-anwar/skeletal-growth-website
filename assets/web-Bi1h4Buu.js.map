{"version":3,"file":"web-Bi1h4Buu.js","sources":["../../node_modules/@capacitor-community/sqlite/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class CapacitorSQLiteWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.jeepSqliteElement = null;\n        this.isWebStoreOpen = false;\n    }\n    async initWebStore() {\n        await customElements.whenDefined('jeep-sqlite');\n        this.jeepSqliteElement = document.querySelector('jeep-sqlite');\n        this.ensureJeepSqliteIsAvailable();\n        this.jeepSqliteElement.addEventListener('jeepSqliteImportProgress', (event) => {\n            this.notifyListeners('sqliteImportProgressEvent', event.detail);\n        });\n        this.jeepSqliteElement.addEventListener('jeepSqliteExportProgress', (event) => {\n            this.notifyListeners('sqliteExportProgressEvent', event.detail);\n        });\n        this.jeepSqliteElement.addEventListener('jeepSqliteHTTPRequestEnded', (event) => {\n            this.notifyListeners('sqliteHTTPRequestEndedEvent', event.detail);\n        });\n        this.jeepSqliteElement.addEventListener('jeepSqlitePickDatabaseEnded', (event) => {\n            this.notifyListeners('sqlitePickDatabaseEndedEvent', event.detail);\n        });\n        this.jeepSqliteElement.addEventListener('jeepSqliteSaveDatabaseToDisk', (event) => {\n            this.notifyListeners('sqliteSaveDatabaseToDiskEvent', event.detail);\n        });\n        if (!this.isWebStoreOpen) {\n            this.isWebStoreOpen = await this.jeepSqliteElement.isStoreOpen();\n        }\n        return;\n    }\n    async saveToStore(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.saveToStore(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async getFromLocalDiskToStore(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.getFromLocalDiskToStore(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async saveToLocalDisk(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.saveToLocalDisk(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async echo(options) {\n        this.ensureJeepSqliteIsAvailable();\n        const echoResult = await this.jeepSqliteElement.echo(options);\n        return echoResult;\n    }\n    async createConnection(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.createConnection(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async open(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.open(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async closeConnection(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.closeConnection(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async getVersion(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const versionResult = await this.jeepSqliteElement.getVersion(options);\n            return versionResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async checkConnectionsConsistency(options) {\n        this.ensureJeepSqliteIsAvailable();\n        try {\n            const consistencyResult = await this.jeepSqliteElement.checkConnectionsConsistency(options);\n            return consistencyResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async close(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.close(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async beginTransaction(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const changes = await this.jeepSqliteElement.beginTransaction(options);\n            return changes;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async commitTransaction(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const changes = await this.jeepSqliteElement.commitTransaction(options);\n            return changes;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async rollbackTransaction(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const changes = await this.jeepSqliteElement.rollbackTransaction(options);\n            return changes;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async isTransactionActive(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const result = await this.jeepSqliteElement.isTransactionActive(options);\n            return result;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async getTableList(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const tableListResult = await this.jeepSqliteElement.getTableList(options);\n            return tableListResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async execute(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const executeResult = await this.jeepSqliteElement.execute(options);\n            return executeResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async executeSet(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const executeResult = await this.jeepSqliteElement.executeSet(options);\n            return executeResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async run(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const runResult = await this.jeepSqliteElement.run(options);\n            return runResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async query(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const queryResult = await this.jeepSqliteElement.query(options);\n            return queryResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async isDBExists(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const dbExistsResult = await this.jeepSqliteElement.isDBExists(options);\n            return dbExistsResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async isDBOpen(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const isDBOpenResult = await this.jeepSqliteElement.isDBOpen(options);\n            return isDBOpenResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async isDatabase(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const isDatabaseResult = await this.jeepSqliteElement.isDatabase(options);\n            return isDatabaseResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async isTableExists(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const tableExistsResult = await this.jeepSqliteElement.isTableExists(options);\n            return tableExistsResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async deleteDatabase(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.deleteDatabase(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async isJsonValid(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const isJsonValidResult = await this.jeepSqliteElement.isJsonValid(options);\n            return isJsonValidResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async importFromJson(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const importFromJsonResult = await this.jeepSqliteElement.importFromJson(options);\n            return importFromJsonResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async exportToJson(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const exportToJsonResult = await this.jeepSqliteElement.exportToJson(options);\n            return exportToJsonResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async createSyncTable(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const createSyncTableResult = await this.jeepSqliteElement.createSyncTable(options);\n            return createSyncTableResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async setSyncDate(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.setSyncDate(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async getSyncDate(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const getSyncDateResult = await this.jeepSqliteElement.getSyncDate(options);\n            return getSyncDateResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async deleteExportedRows(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.deleteExportedRows(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async addUpgradeStatement(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.addUpgradeStatement(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async copyFromAssets(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.copyFromAssets(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async getFromHTTPRequest(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.getFromHTTPRequest(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async getDatabaseList() {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const databaseListResult = await this.jeepSqliteElement.getDatabaseList();\n            return databaseListResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    /**\n     * Checks if the `jeep-sqlite` element is present in the DOM.\n     * If it's not in the DOM, this method throws an Error.\n     *\n     * Attention: This will always fail, if the `intWebStore()` method wasn't called before.\n     */\n    ensureJeepSqliteIsAvailable() {\n        if (this.jeepSqliteElement === null) {\n            throw new Error(`The jeep-sqlite element is not present in the DOM! Please check the @capacitor-community/sqlite documentation for instructions regarding the web platform.`);\n        }\n    }\n    ensureWebstoreIsOpen() {\n        if (!this.isWebStoreOpen) {\n            /**\n             * if (!this.isWebStoreOpen)\n              this.isWebStoreOpen = await this.jeepSqliteElement.isStoreOpen();\n             */\n            throw new Error('WebStore is not open yet. You have to call \"initWebStore()\" first.');\n        }\n    }\n    ////////////////////////////////////\n    ////// UNIMPLEMENTED METHODS\n    ////////////////////////////////////\n    async getUrl() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async getMigratableDbList(options) {\n        console.log('getMigratableDbList', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async addSQLiteSuffix(options) {\n        console.log('addSQLiteSuffix', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async deleteOldDatabases(options) {\n        console.log('deleteOldDatabases', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async moveDatabasesAndAddSuffix(options) {\n        console.log('moveDatabasesAndAddSuffix', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async isSecretStored() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async setEncryptionSecret(options) {\n        console.log('setEncryptionSecret', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async changeEncryptionSecret(options) {\n        console.log('changeEncryptionSecret', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async clearEncryptionSecret() {\n        console.log('clearEncryptionSecret');\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async checkEncryptionSecret(options) {\n        console.log('checkEncryptionPassPhrase', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async getNCDatabasePath(options) {\n        console.log('getNCDatabasePath', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async createNCConnection(options) {\n        console.log('createNCConnection', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async closeNCConnection(options) {\n        console.log('closeNCConnection', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async isNCDatabase(options) {\n        console.log('isNCDatabase', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async isDatabaseEncrypted(options) {\n        console.log('isDatabaseEncrypted', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async isInConfigEncryption() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async isInConfigBiometricAuth() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async loadExtension(options) {\n        console.log('loadExtension', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async enableLoadExtension(options) {\n        console.log('enableLoadExtension', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n}\n//# sourceMappingURL=web.js.map"],"names":["CapacitorSQLiteWeb","WebPlugin","event","options","err"],"mappings":"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","x_google_ignoreList":[0]}